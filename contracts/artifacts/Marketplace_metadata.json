{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_acceptedToken",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "BidAccepted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "BidCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "assetId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "priceInWei",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expiresAt",
						"type": "uint256"
					}
				],
				"name": "BidCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "assetId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "priceInWei",
						"type": "uint256"
					}
				],
				"name": "Buycreate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cutPerMillion",
						"type": "uint256"
					}
				],
				"name": "ChangedFeePerMillion",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "OrderCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "assetId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "priceInWei",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expiresAt",
						"type": "uint256"
					}
				],
				"name": "OrderCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "priceInWei",
						"type": "uint256"
					}
				],
				"name": "OrderSuccessful",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "priceInWei",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expiresAt",
						"type": "uint256"
					}
				],
				"name": "OrderUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_assetId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_priceInWei",
						"type": "uint256"
					}
				],
				"name": "Buy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_assetId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_priceInWei",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_expiresAt",
						"type": "uint256"
					}
				],
				"name": "PlaceBid",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_INTERFACE_ID_ERC721",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_assetId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_priceInWei",
						"type": "uint256"
					}
				],
				"name": "acceptBid",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "acceptedToken",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "bidByOrderId",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expiresAt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_assetId",
						"type": "uint256"
					}
				],
				"name": "cancelBid",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_assetId",
						"type": "uint256"
					}
				],
				"name": "cancelOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_assetId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_priceInWei",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_expiresAt",
						"type": "uint256"
					}
				],
				"name": "createOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cutPerMillion",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxCutPerMillion",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "orderByAssetId",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expiresAt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "royaltyPerMillion",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_assetId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_priceInWei",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "_fingerprint",
						"type": "bytes32"
					}
				],
				"name": "safeExecuteOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_cutPerMillion",
						"type": "uint256"
					}
				],
				"name": "setOwnerCutPerMillion",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_setPaused",
						"type": "bool"
					}
				],
				"name": "setPaused",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_assetId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_priceInWei",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_expiresAt",
						"type": "uint256"
					}
				],
				"name": "updateOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"PlaceBid(address,uint256,uint256,uint256)": {
					"details": "Places a bid for a published NFT and checks for the asset fingerprint",
					"params": {
						"_assetId": "- ID of the published NFT",
						"_expiresAt": "- Bid expiration time",
						"_nftAddress": "- Address of the NFT registry",
						"_priceInWei": "- Bid price in acceptedToken currency"
					}
				},
				"acceptBid(address,uint256,uint256)": {
					"details": "Executes the sale for a published NFT by accepting a current bid",
					"params": {
						"_assetId": "- ID of the published NFT",
						"_nftAddress": "- Address of the NFT registry",
						"_priceInWei": "- Bid price in wei in acceptedTokens currency"
					}
				},
				"cancelBid(address,uint256)": {
					"details": "Cancel an already published bid  can only be canceled by seller or the contract owner",
					"params": {
						"_assetId": "- ID of the published NFT",
						"_nftAddress": "- Address of the NFT registry"
					}
				},
				"cancelOrder(address,uint256)": {
					"details": "Cancel an already published order  can only be canceled by seller or the contract owner",
					"params": {
						"_assetId": "- ID of the published NFT",
						"_nftAddress": "- Address of the NFT registry"
					}
				},
				"constructor": {
					"details": "Initialize this contract. Acts as a constructor",
					"params": {
						"_acceptedToken": "- currency for payments"
					}
				},
				"createOrder(address,uint256,uint256,uint256)": {
					"details": "Creates a new order",
					"params": {
						"_assetId": "- ID of the published NFT",
						"_expiresAt": "- Duration of the order (in hours)",
						"_nftAddress": "- Non fungible registry address",
						"_priceInWei": "- Price in Wei for the supported coin"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"safeExecuteOrder(address,uint256,uint256,bytes32)": {
					"details": "Executes the sale for a published NFT and checks for the asset fingerprint",
					"params": {
						"_assetId": "- ID of the published NFT",
						"_fingerprint": "- Verification info for the asset",
						"_nftAddress": "- Address of the NFT registry",
						"_priceInWei": "- Order price"
					}
				},
				"setOwnerCutPerMillion(uint256)": {
					"details": "Sets the share cut for the owner of the contract that's  charged to the seller on a successful sale",
					"params": {
						"_cutPerMillion": "- Share amount, from 0 to 99,999"
					}
				},
				"setPaused(bool)": {
					"details": "Sets the paused failsafe. Can only be called by owner",
					"params": {
						"_setPaused": "- paused state"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateOrder(address,uint256,uint256,uint256)": {
					"details": "Update an already published order  can only be updated by seller",
					"params": {
						"_assetId": "- ID of the published NFT",
						"_nftAddress": "- Address of the NFT registry"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Marketplace.sol": "Marketplace"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7",
				"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ"
			]
		},
		"@openzeppelin/contracts/security/Pausable.sol": {
			"keccak256": "0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e",
			"license": "MIT",
			"urls": [
				"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c",
				"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
			"license": "MIT",
			"urls": [
				"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
				"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
			]
		},
		"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
			"keccak256": "0xa1d1853a86dd59f387cd67d278a7ff2dff65e63ceeedfaa2be4419a80fdacf0e",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0b37dedf9524f0c53a9bd962b7da5a0cf08e4f68739d582d6248fc93f5e3af2",
				"dweb:/ipfs/QmeUSfcTR71pfkuUap66Fa3NcrYnUQi5voYT2V1bFj8NaK"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xaa25da54e5fd2329b86da156a9993da1171898d7cee58b3bee7ab7ccf9253583",
			"license": "MIT",
			"urls": [
				"bzz-raw://003f9e2ce2a873dd7bd15ba9e3b2220014393a92898544ccf66b0383f6e0d6f8",
				"dweb:/ipfs/QmcnTJRe9LsvPbCCt1MBNLYZBEdQrZVvP7UDiqYYc91TEE"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4",
			"license": "MIT",
			"urls": [
				"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456",
				"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT"
			]
		},
		"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0x88c7d04200f1087a8072e40d606f493d94f3bf25a59a3c35bfc8f3578f5d2417",
			"license": "MIT",
			"urls": [
				"bzz-raw://a406a0e8e23ec31b428ef0aeffb3edf8f6fab270361dc79316c36c410b97ab42",
				"dweb:/ipfs/QmQjo6QbDff4zALNPSu7mz8ZKmwinKM8gHLxuDFWTuHtGT"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e",
				"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395",
				"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0",
			"license": "MIT",
			"urls": [
				"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f",
				"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b",
			"license": "MIT",
			"urls": [
				"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549",
				"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4",
			"license": "MIT",
			"urls": [
				"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6",
				"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e",
			"license": "MIT",
			"urls": [
				"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509",
				"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT"
			]
		},
		"contracts/FeeManager.sol": {
			"keccak256": "0x9ebf9798fb94258196365a8324d945f5c88d3c7e26371e6e67f45d17bc587935",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://aafcea8189e842f8094123e250a5d9d374bacd49df9b8b390e1747b12a19bb4d",
				"dweb:/ipfs/QmaWX7ZGR266U1G3iVLk54vW4GVZ29qyPkg99yz4g2sLGW"
			]
		},
		"contracts/IERC721Verifiable.sol": {
			"keccak256": "0x23527da53209cfaa4fd7b0553fc8f5cab08486be7a58c6c18ff41a47eee5d8dd",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://5a2073717bf3967b92d7d8c1301f2ea7676c3a45a36d34ac5c67b6e83a89eb6a",
				"dweb:/ipfs/QmendMe7HTVxo7WD3oJDX54neVdCdy7Aie2pNszMnn33AA"
			]
		},
		"contracts/IMarketplace.sol": {
			"keccak256": "0x254174177b0a4d0fa24828abfe7dd8e2b8d18f63c54b695b66718488bb94710b",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://0dc51a68649546956ebb3f3a87d64b2764794ebf6fe976ebb1603bff293c0b66",
				"dweb:/ipfs/QmfLMXTEUy5BNr8kUcSAWA8KGGehbGs9JUJUKExE59NUGT"
			]
		},
		"contracts/Marketplace.sol": {
			"keccak256": "0x311e603f13ad234fb733cd40ad6ffaf1b51b6035dfa5b63ca6d5fb214a249d6e",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://85032c547b70bc8afe42c502585ba78204279b67d46009c031c6fe85aa0a9846",
				"dweb:/ipfs/QmcZ2Xd7XUpzBnHGkZPiPJYeqtvu4UGwHKfvTEbehYeETN"
			]
		}
	},
	"version": 1
}